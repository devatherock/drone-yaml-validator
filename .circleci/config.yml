slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:0.7.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
    
yaml_validator_image: &yaml_validator_image
  docker:
    - image: devatherock/vela-yaml-validator:latest
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        
orbs:
  gradle: circleci/gradle@2.2.0

work_directory: &work_directory
  working_directory: ~/drone-yaml-validator

resource_class: &resource_class
  resource_class: small

executors:
  jdk-executor:
    docker:
      - image: cimg/openjdk:16.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  groovy_script_to_jar:
    docker:
      - image: devatherock/vela-groovy-script-to-jar:0.7.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_SCRIPT_PATH: YamlValidator.groovy
      PARAMETER_STATIC_COMPILE: true
      PARAMETER_OUTPUT_FILE: build/native/libs/YamlValidator.jar
    steps:
      - checkout
      - run: sh /scripts/entry-point.sh
      - persist_to_workspace:
          root: ~/drone-yaml-validator
          paths:
            - build
  java_to_native:
    docker:
      - image: devatherock/java-to-native:0.1.3
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    resource_class: medium
    <<: *work_directory
    environment:
      PLUGIN_JAR_NAME: build/native/libs/YamlValidator.jar
      PLUGIN_CONFIG_FILE: config/graal.yml
    steps:
      - checkout
      - attach_workspace:
          at: ~/drone-yaml-validator
      - run: sh /scripts/entry-point.sh
      - persist_to_workspace:
          root: ~/drone-yaml-validator
          paths:
            - YamlValidator
            
  test_binary:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/drone-yaml-validator
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-
      - run: |
          git clone --depth=1 --branch=master https://github.com/devatherock/gradle-includes.git ../gradle-includes
          ./gradlew test --tests '*YamlValidatorBinarySpec*' -x jacocoTestCoverageVerification --no-daemon
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

  publish_dev:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/drone-yaml-validator
      - run: |
          TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t devatherock/drone-yaml-validator:$TAG .
          docker tag devatherock/drone-yaml-validator:$TAG devatherock/drone-yaml-validator:latest
          docker tag devatherock/drone-yaml-validator:$TAG devatherock/vela-yaml-validator:$TAG
          docker tag devatherock/drone-yaml-validator:$TAG devatherock/vela-yaml-validator:latest
          docker push devatherock/drone-yaml-validator:$TAG
          docker push devatherock/drone-yaml-validator:latest
          docker push devatherock/vela-yaml-validator:$TAG
          docker push devatherock/vela-yaml-validator:latest

  test_docker:
    <<: *yaml_validator_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_SEARCH_PATH: "src/test/resources/data/valid"
    steps:
      - checkout
      - attach_workspace:
          at: ~/drone-yaml-validator
      - run: sh /scripts/entry-point.sh

  test_docker_duplicate_keys:
    <<: *yaml_validator_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_SEARCH_PATH: "src/test/resources/data/duplicate"
      PARAMETER_ALLOW_DUPLICATE_KEYS: true
    steps:
      - checkout
      - attach_workspace:
          at: ~/drone-yaml-validator
      - run: sh /scripts/entry-point.sh

  test_docker_debug:
    <<: *yaml_validator_image
    <<: *resource_class
    <<: *work_directory
    environment:
      PARAMETER_DEBUG: true
      PARAMETER_SEARCH_PATH: "src/test/resources/data/valid"
    steps:
      - checkout
      - attach_workspace:
          at: ~/drone-yaml-validator
      - run: sh /scripts/entry-point.sh
      
  publish_release:
    executor: jdk-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/drone-yaml-validator
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull devatherock/drone-yaml-validator:$DEV_TAG
          docker tag devatherock/drone-yaml-validator:$DEV_TAG devatherock/drone-yaml-validator:$TAG
          docker tag devatherock/drone-yaml-validator:$TAG devatherock/vela-yaml-validator:$TAG
          docker push devatherock/drone-yaml-validator:$TAG
          docker push devatherock/vela-yaml-validator:$TAG

  notify_success:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      COLOR: "#33ad7f"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack

workflows:
  version: 2.1
  build_publish:
    jobs:
      - gradle/run:
          name: build
          executor: jdk-executor
          context:
            - docker-credentials
          filters:
            branches:
              only: master
          command: test --tests '*YamlValidatorSpec*' coveralls
          pre-steps:
            - run:
                command: |
                  git clone --depth=1 --branch=master https://github.com/devatherock/gradle-includes.git ../gradle-includes
      - groovy_script_to_jar:
          context:
            - docker-credentials
          filters:
            branches:
              only: master
          requires:
            - build
      - java_to_native:
          context:
            - docker-credentials
          requires:
            - groovy_script_to_jar
      - test_binary:
          context:
            - docker-credentials
          requires:
            - java_to_native
      - publish_dev:
          context:
            - docker-credentials
          requires:
            - test_binary
      - test_docker:
          context:
            - docker-credentials
          requires:
            - publish_dev
      - test_docker_duplicate_keys:
          context:
            - docker-credentials
          requires:
            - publish_dev
      - test_docker_debug:
          context:
            - docker-credentials
          requires:
            - publish_dev
      - notify_success:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - test_docker
            - test_docker_duplicate_keys
            - test_docker_debug
  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          filters:
            branches:
              only: non-existent-branch
            tags:
              only: /^v[0-9\.]+$/
      - notify_success:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish_release
  pr_check:
    jobs:
      - gradle/run:
          name: test
          executor: jdk-executor
          context:
            - docker-credentials
          filters:
            branches:
              ignore:
                - master
          command: test --tests '*YamlValidatorSpec*'
          pre-steps:
            - run:
                command: |
                  git clone --depth=1 --branch=master https://github.com/devatherock/gradle-includes.git ../gradle-includes
      - groovy_script_to_jar:
          filters:
            branches:
              ignore: master
          requires:
            - test